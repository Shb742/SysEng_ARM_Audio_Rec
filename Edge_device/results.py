# actual positives : - 351
# actual negatives : - 1059
# total :- 1410

# tpr_points = [0.0, 0.9145299145299145, 0.8746438746438746, 0.8632478632478633, 0.8290598290598291, 0.8319088319088319, 0.8233618233618234, 0.8233618233618234, 0.8091168091168092, 0.8262108262108262, 0.8319088319088319, 0.8205128205128205, 0.8233618233618234, 0.8062678062678063, 0.8005698005698005]
# fpr_points = [0.0, 0.0226628895184136, 0.01794145420207743, 0.0169971671388102, 0.0169971671388102, 0.019830028328611898, 0.019830028328611898, 0.02077431539187913, 0.01794145420207743, 0.019830028328611898, 0.019830028328611898, 0.018885741265344664, 0.0169971671388102, 0.0169971671388102, 0.016052880075542966]
# ppv_points = [0.0, 0.9304347826086956, 0.941717791411043, 0.9439252336448598, 0.941747572815534, 0.9329073482428115, 0.932258064516129, 0.9292604501607717, 0.9372937293729373, 0.932475884244373, 0.9329073482428115, 0.935064935064935, 0.9413680781758957, 0.9401993355481728, 0.9429530201342282]

# 0-15,1 - normalize volume
# ------------------------------------------------------------------

tpr_points = [0.0, 0.9145299145299145, 0.8746438746438746, 0.8632478632478633, 0.8290598290598291, 0.8319088319088319, 0.8233618233618234, 0.8233618233618234, 0.8091168091168092, 0.8262108262108262, 0.8319088319088319, 0.8205128205128205, 0.8233618233618234, 0.8062678062678063, 0.8005698005698005, 0.7578347578347578, 0.7264957264957265, 0.7065527065527065, 0.6723646723646723, 0.6438746438746439, 0.6381766381766382, 0.6267806267806267, 0.6296296296296297, 0.6267806267806267, 0.6153846153846154]

fpr_points = [0.0, 0.0226628895184136, 0.01794145420207743, 0.0169971671388102, 0.0169971671388102, 0.019830028328611898, 0.019830028328611898, 0.02077431539187913, 0.01794145420207743, 0.019830028328611898, 0.019830028328611898, 0.018885741265344664, 0.0169971671388102, 0.0169971671388102, 0.016052880075542966, 0.019830028328611898, 0.0169971671388102, 0.01794145420207743, 0.015108593012275733, 0.016052880075542966, 0.01794145420207743, 0.015108593012275733, 0.015108593012275733, 0.014164305949008499, 0.013220018885741265]

ppv_points = [0.0, 0.9304347826086956, 0.941717791411043, 0.9439252336448598, 0.941747572815534, 0.9329073482428115, 0.932258064516129, 0.9292604501607717, 0.9372937293729373, 0.932475884244373, 0.9329073482428115, 0.935064935064935, 0.9413680781758957, 0.9401993355481728, 0.9429530201342282, 0.926829268292683, 0.9340659340659341, 0.9288389513108615, 0.9365079365079365, 0.9300411522633745, 0.9218106995884774, 0.9322033898305084, 0.9324894514767933, 0.9361702127659575, 0.9391304347826087]

# 0,25,1 normalize volume
# ------------------------------------------------------------------

import matplotlib.pyplot as plt
import numpy as np


def ROC_PRC(ppv,tpr,fpr,title):
	# This is the AUC
	auc = abs(np.trapz(tpr_points,fpr_points))
	print("Area Under Curve - "+str(auc))
	plt.figure(title)
	# This is the ROC curve
	plt.subplot(211)
	plt.title("ROC curve")
	plt.xlim([0, 1])
	plt.ylim([0, 1])
	#Plot no skill
	plt.plot([0, 1], [0, 1], linestyle='--')
	plt.plot(fpr_points,tpr_points,'r-.')
	plt.ylabel("True positive rate")
	plt.xlabel("False positive rate")
	#plt.gca().invert_xaxis()#inver x axis so it makes sense

	plt.subplot(212)
	plt.title("PRC curve")
	plt.xlim([0, 1])
	plt.ylim([0, 1])
	# plot no skill
	plt.plot([0, 1], [0.5, 0.5], linestyle='--')
	plt.plot(tpr_points,ppv_points,'r-.')
	plt.ylabel("Positive predictive value")
	plt.xlabel("True positive rate")
	plt.show() 

def normalize_volume_graph(tpr,fpr):
	plt.figure("Volume Normalization")
	plt.title("True positive rate vs False positive rate")
	tpr[0] = 0.7521367521367521 #No normalization
	fpr[0] = 0.019830028328611898 #No normalization
	x = [i for i in range(len(tpr))]
	height = [ (tpr[i]**1)/fpr[i] if (fpr[i] != 0.0) else 0.0 for i in range(len(tpr))]
	plt.bar(x, height, align='center')
	plt.xticks(x, x)
	plt.ylabel('tpr/fpr')
	plt.annotate('Note : 0 point means no Normalization', (0,0), (0, -20), xycoords='axes fraction', textcoords='offset points', va='top')
	plt.show()

normalize_volume_graph(tpr_points,fpr_points) 